{"version":3,"sources":["services/State/ApiCaller.ts","services/State/StateManager.ts","services/State/createSocketMiddleware.ts","state/index.ts","state/modules/board/utils.ts","state/modules/board/actions.ts","state/modules/root/index.ts","state/history.ts","views/Game/Cell.tsx","views/Game/Board.tsx","views/Game/constants.ts","views/Game/DifficultySelector.tsx","views/Game/index.tsx","App.tsx","serviceWorker.ts","state/store.ts","index.tsx","services/index.ts","settings/index.ts","services/State/constants.ts","state/modules/root/public.ts","state/modules/board/selectors.ts","services/useInterval.ts","services/State/index.ts"],"names":["apiCaller","a","path","method","data","token","session_id","endpoint","query","queryString","stringify","url","API_URL","endsWith","split","filter","s","forEach","param","key","slice","replace","undefined","headers","Headers","append","fetch","body","JSON","response","json","status","result","StateManager","sockets","timeouts","pingInterval","logging","handleMessage","handleOpen","handleClose","handleReconnect","socketEvents","sagaEffects","_ping","socketDesc","socket","send","PING","setTimeout","close","PONG_TIMEOUT","_onPong","clearTimeout","_listen","onopen","event","setInterval","PING_INTERVAL","_log","onclose","clearInterval","console","log","wasClean","uri","connectToSocket","onmessage","PONG","parse","state","getState","socketObj","SOCKET_STATES","readyState","SOCKET_OPENED","WebSocket","SOCKET_URL","disconnectFromSocket","onOpen","func","onReconnect","onMessage","onClose","this","name","initialState","single","item","items","waiting","reducer","reducerWithInitialState","events","module","actionName","reducerFn","action","actionCreatorFactory","case","payload","produce","draft","api","asyncAction","async","push","takeEvery","started","select","auth","session","id","call","toString","put","failed","params","error","done","startReducer","failReducer","successReducer","onReceive","reducers","Object","entries","val","combineReducers","self","effect","f","createSocketMiddleware","stateManager","store","next","res","meta","SOCKET_COMMAND","type","SOCKET_CONNECT","dispatch","SOCKET_CONNECTED","SOCKET_CLOSED","message","SOCKET_RECEIVE","SOCKET_RECONNECT","SOCKET_DISCONNECT","hasOwnProperty","warn","SOCKET_RECONNECTED","getNeighbors","cell","cells","x","y","neighbors","i","j","nx","ny","revealCell","is_revealed","is_flagged","is_bomb","row","revealAll","value","map","generateBoard","rows","cols","bombs","startTime","Date","options","pickRandomAndRemove","arr","index","Math","floor","random","length","splice","createModule","initBoard","createLocalEvent","resetBoard","triggerReveal","reduce","p","c","countFlags","board","computeGameStatus","triggerFlag","history","createBrowserHistory","location","qs","search","substr","listen","go","goBack","memo","disabled","useDispatch","danger","style","height","width","borderRadius","onMouseDown","e","preventDefault","button","onContextMenu","Board","useSelector","boardSelectors","gameStatus","bombsLeft","useState","elapsedTime","setElapsedTime","useEffect","info","String","padStart","border","DIFFICULTIES","Easy","Intermediate","Expert","DifficultySelector","difficulty","setDifficulty","keys","diff","onClick","Game","Row","props","justify","textAlign","paddingTop","children","App","defer","htmlAttributes","lang","encodeSpecialCharacters","defaultTitle","titleTemplate","titleAttributes","itemprop","defaultProps","Boolean","window","hostname","match","sagaMiddleware","createSagaMiddleware","enhancers","compose","applyMiddleware","devToolsEnhancer","createStore","run","saga","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","0","1","2","3","flat"],"mappings":"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","file":"static/js/main.4e220fd7.chunk.js","sourcesContent":["import queryString from 'query-string';\nimport { select } from 'redux-saga/effects';\n\nimport { API_URL } from 'settings';\n\ntype apiParams<Payload> = {\n  path: string;\n  endpoint: string;\n  method?: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n  data?: Payload;\n  token?: string;\n  session_id?: string;\n};\n\nexport async function apiCaller<Payload>({\n  path,\n  method = 'GET',\n  data,\n  token,\n  session_id,\n  endpoint,\n}: apiParams<Payload>): Promise<any> {\n  // session_id is required for the session specific requests\n  if (session_id) data = { ...data, session_id: session_id } as any;\n\n  const query = '?' + queryString.stringify((data as any) || {});\n\n  let url = `${API_URL}/${endpoint}${path}`;\n  if (!url.endsWith('/')) url += '/';\n\n  if (method === 'GET') url += query;\n\n  const urlParams = path.split('/').filter(s => s[0] === ':');\n\n  urlParams.forEach(param => {\n    const key = param.slice(1);\n    url = url.replace(param, (data as any)[key]);\n    (data as any)[key] = undefined;\n  });\n\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  if (token) {\n    headers.append('Authorization', `JWT ${token}`);\n  }\n\n  const response = await fetch(url, {\n    headers,\n    method,\n    body: method !== 'GET' ? JSON.stringify(data) : undefined,\n  });\n\n  try {\n    return { result: await response.json(), status: response.status };\n  } catch (e) {\n    return { result: e, status: response.status };\n  }\n}\n","import { call, ForkEffect, put, takeEvery, select } from 'redux-saga/effects';\nimport { combineReducers } from 'redux';\nimport {\n  Action,\n  ActionCreator,\n  Success,\n  actionCreatorFactory,\n} from 'typescript-fsa';\nimport {\n  ReducerBuilder,\n  reducerWithInitialState,\n} from 'typescript-fsa-reducers';\nimport { produce } from 'immer';\n\nimport { SOCKET_URL } from 'settings';\n\nimport { API, apiCaller, CreateModuleOptions } from 'services';\n\nimport {\n  PING_INTERVAL,\n  PONG_TIMEOUT,\n  PING,\n  PONG,\n  SOCKET_STATES,\n  SOCKET_OPENED,\n} from './constants';\n\nexport default class StateManager {\n  readonly sockets: {\n    [key: string]: {\n      socket: WebSocket;\n      uri: string;\n      token: string;\n    };\n  };\n  readonly timeouts: {\n    [key: string]: NodeJS.Timeout;\n  };\n  private pingInterval: NodeJS.Timeout | null;\n  readonly logging: boolean;\n\n  private handleMessage: (...args: unknown[]) => void;\n  private handleOpen: (...args: unknown[]) => void;\n  private handleClose: (...args: unknown[]) => void;\n  private handleReconnect: (...args: unknown[]) => void;\n\n  readonly socketEvents: {\n    // module\n    [key: string]: {\n      reducer: ReducerBuilder<any>;\n      events: {\n        [key: string]: ActionCreator<any>;\n      };\n    };\n  };\n  private sagaEffects: ForkEffect[] = [];\n\n  constructor() {\n    this.sockets = {};\n    this.timeouts = {};\n    this.pingInterval = null;\n    this.logging = true;\n\n    // Callbacks\n    this.handleMessage = a => console.log(a);\n    this.handleOpen = a => console.log(a);\n    this.handleClose = a => console.log(a);\n    this.handleReconnect = a => console.log(a);\n\n    this.socketEvents = {};\n  }\n\n  private _ping = (socketDesc: string) => {\n    this.sockets[socketDesc].socket.send(PING);\n\n    this.timeouts[socketDesc] = setTimeout(() => {\n      this.sockets[socketDesc].socket.close(4008, 'ping_timeout');\n    }, PONG_TIMEOUT);\n  };\n\n  private _onPong = (socketDesc: string) => {\n    clearTimeout(this.timeouts[socketDesc]);\n  };\n\n  private _listen = (socketDesc: string) => {\n    const { socket } = this.sockets[socketDesc];\n\n    socket.onopen = event => {\n      this.pingInterval = setInterval(\n        () => this._ping(socketDesc),\n        PING_INTERVAL\n      );\n      this._log(event, socketDesc);\n      this.handleOpen(socketDesc);\n    };\n\n    socket.onclose = event => {\n      clearInterval(this.pingInterval as NodeJS.Timeout);\n      console.log(this.sockets);\n      // attempt to reconnect if socket connection is dropped\n\n      if (!event.wasClean) {\n        const { token, uri } = this.sockets[socketDesc];\n        setTimeout(() => this.connectToSocket(socketDesc, token, uri), 10000);\n      }\n\n      this.handleClose(socketDesc, event.wasClean);\n      this._log(event, socketDesc);\n    };\n\n    socket.onmessage = event => {\n      const message = event.data;\n      if (message === PONG) this._onPong(socketDesc);\n      else {\n        this.handleMessage(socketDesc, JSON.parse(event.data));\n        this._log(event, socketDesc);\n      }\n    };\n  };\n\n  private _log = (event: any, socketDesc: string) => {\n    this.logging &&\n      console.log({\n        event,\n        state: this.getState(socketDesc),\n        socketObj: this.sockets,\n      });\n  };\n\n  public getState = (socketDesc: string) =>\n    SOCKET_STATES[this.sockets[socketDesc].socket.readyState];\n\n  public connectToSocket = (socketDesc: string, token: string, uri: string) => {\n    if (\n      this.sockets[socketDesc] &&\n      SOCKET_STATES[this.sockets[socketDesc].socket.readyState] ===\n        SOCKET_OPENED\n    )\n      return;\n\n    const socket = new WebSocket(`${SOCKET_URL}${uri}?token=${token}`);\n\n    this.sockets[socketDesc] = { token, uri, socket };\n    this._listen(socketDesc);\n  };\n\n  public disconnectFromSocket = (socketDesc: string) => {\n    console.log(this.sockets);\n    this.sockets[socketDesc].socket.close();\n  };\n\n  public onOpen = (func: any) => {\n    this.handleOpen = func;\n  };\n\n  public onReconnect = (func: any) => {\n    this.handleReconnect = func;\n  };\n\n  public onMessage = (func: any) => {\n    this.handleMessage = func;\n  };\n\n  public onClose = (func: any) => {\n    this.handleClose = func;\n  };\n\n  // this is used to define different reducers for different apis\n  public createModule(\n    name: string,\n    { initialState, single }: CreateModuleOptions = {}\n  ) {\n    if (!initialState) {\n      initialState = single ? { item: {} } : { items: [] };\n      initialState = { ...initialState, waiting: false };\n    }\n\n    this.socketEvents[name] = {\n      reducer: reducerWithInitialState(initialState),\n      events: {},\n    };\n  }\n\n  public createLocalEvent<Payload, ApiState>(\n    module: string,\n    actionName: string,\n    reducerFn: (state: ApiState, payload: Payload) => void\n  ) {\n    const action = actionCreatorFactory(module)<Payload>(actionName);\n\n    const { reducer } = this.socketEvents[module];\n\n    reducer.case(action, (state, payload) =>\n      produce(state, (draft: any) => {\n        reducerFn(draft, payload);\n      })\n    );\n\n    return action;\n  }\n\n  public createApi<Payload, Result, ApiState>(\n    module: string,\n    actionName: string,\n    api: API<Payload, Result, ApiState>\n  ): (payload: Payload) => Action<Payload> {\n    const asyncAction = actionCreatorFactory(module).async<\n      Payload,\n      Result,\n      Error\n    >(actionName);\n\n    this.sagaEffects.push(\n      // when this action is dispatched\n      takeEvery(asyncAction.started, function* (action: Action<Payload>) {\n        try {\n          // fetch auth\n          const token = yield select(state => state.auth.item.token);\n          const session_id = yield select(\n            state => state.session.item?.session?.id\n          );\n          // call api\n          const { result, status } = yield call(() =>\n            apiCaller<Payload>({\n              endpoint: module,\n              ...api,\n              data: action.payload,\n              token,\n              session_id,\n            })\n          );\n\n          if (status.toString()[0] !== '2') {\n            console.log(result);\n            return yield put(\n              asyncAction.failed({ params: action.payload, error: result })\n            );\n          }\n\n          yield put(asyncAction.done({ params: action.payload, result }));\n        } catch (error) {\n          console.log(error);\n          yield put(asyncAction.failed({ params: action.payload, error }));\n        }\n      })\n    );\n\n    const { reducer } = this.socketEvents[module];\n\n    reducer.case(asyncAction.started, (state, payload) =>\n      produce(state, (draft: any) => {\n        draft.waiting = true;\n        draft.error = undefined;\n        if (api.startReducer) api.startReducer(draft, payload);\n      })\n    );\n\n    reducer.case(asyncAction.failed, (state, { params, error }) =>\n      produce(state, (draft: any) => {\n        draft.waiting = false;\n        draft.error = error;\n        if (api.failReducer) api.failReducer(draft, error, params as Payload);\n      })\n    );\n\n    reducer.case(asyncAction.done, (state, { params, result }) =>\n      produce(state, (draft: any) => {\n        draft.waiting = false;\n        api.successReducer(draft, result as Result, params as Payload);\n      })\n    );\n\n    return (payload: Payload) => asyncAction.started(payload);\n  }\n\n  public createSocketListener<Payload, Result, ApiState>(\n    module: string,\n    event: string,\n    onReceive: (state: ApiState, result: Result) => void\n  ) {\n    const action = actionCreatorFactory(module)<Success<Payload, Result>>(\n      event\n    );\n    const { reducer } = this.socketEvents[module];\n\n    this.socketEvents[module].events[event] = action;\n\n    reducer.case(action, (state, payload: any) =>\n      produce(state, (draft: any) => {\n        onReceive(draft, payload as Result);\n      })\n    );\n  }\n\n  get events() {\n    return this.socketEvents;\n  }\n\n  get reducer() {\n    const reducers: {\n      [key: string]: ReducerBuilder<any>;\n    } = {};\n\n    Object.entries(this.socketEvents).forEach(([key, val]) => {\n      reducers[key] = val.reducer;\n    });\n\n    return combineReducers(reducers);\n  }\n\n  get saga() {\n    const self = this;\n    return function* () {\n      for (const effect of self.sagaEffects) {\n        yield effect;\n      }\n    };\n  }\n}\n","import {\n  SOCKET_CONNECT,\n  SOCKET_CONNECTED,\n  SOCKET_DISCONNECT,\n  SOCKET_COMMAND,\n  SOCKET_RECEIVE,\n  SOCKET_CLOSED,\n  SOCKET_RECONNECT,\n  SOCKET_RECONNECTED,\n} from './constants';\n\nimport { SocketAction, StateManager } from 'services';\n\nexport default function createSocketMiddleware(stateManager: StateManager) {\n  return (store: any) => (next: any) => (action: SocketAction) => {\n    let res;\n    let module, event;\n    if (!(action.meta === SOCKET_COMMAND)) {\n      return next(action);\n    } else {\n      res = next(action);\n      switch (action.type) {\n        case SOCKET_CONNECT:\n          stateManager.onOpen((socketDesc: string) => {\n            store.dispatch({\n              type: SOCKET_CONNECTED,\n              meta: SOCKET_COMMAND,\n              socketDesc: socketDesc,\n            });\n          });\n          stateManager.onClose((socketDesc: string, wasClean: boolean) => {\n            console.log('closing ', socketDesc, wasClean);\n            store.dispatch({\n              type: SOCKET_CLOSED,\n              meta: SOCKET_COMMAND,\n              socketDesc: socketDesc,\n              wasClean: wasClean,\n            });\n          });\n          stateManager.onMessage((socketDesc: string, message: string) => {\n            store.dispatch({\n              type: SOCKET_RECEIVE,\n              payload: message,\n              meta: SOCKET_COMMAND,\n              socketDesc: socketDesc,\n            });\n          });\n          stateManager.onReconnect((socketDesc: string) => {\n            store.dispatch({\n              type: SOCKET_RECONNECT,\n              meta: SOCKET_COMMAND,\n              socketDesc: socketDesc,\n            });\n          });\n          stateManager.connectToSocket(\n            action.socketDesc,\n            action.token,\n            action.uri\n          );\n          break;\n        case SOCKET_DISCONNECT:\n          console.log('disconecting ');\n          stateManager.disconnectFromSocket(action.socketDesc);\n          break;\n        case SOCKET_RECEIVE:\n          [module, event] = action.payload['type'].split('.');\n          if (\n            stateManager.events.hasOwnProperty(module) &&\n            stateManager.events[module].events.hasOwnProperty(event)\n          ) {\n            store.dispatch(\n              stateManager.events[module].events[event](action.payload['data'])\n            );\n          } else {\n            console.warn({ module, event }, 'does not exist');\n          }\n          break;\n        case SOCKET_RECONNECT:\n          store.dispatch({\n            type: SOCKET_RECONNECTED,\n            meta: SOCKET_COMMAND,\n            socketDesc: action.socketDesc,\n          });\n      }\n    }\n    return res;\n  };\n}\n","export * from './modules/root/public';\n","import moment from 'moment';\n\nimport { Cell, Board } from 'state';\n\nexport function getNeighbors(cell: Cell, cells: Cell[][]) {\n  const { x, y } = cell;\n\n  const neighbors: Cell[] = [];\n\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      const nx = x + i;\n      const ny = y + j;\n      if (!cells[nx] || !cells[nx][ny]) continue;\n\n      neighbors.push(cells[nx][ny]);\n    }\n  }\n\n  return neighbors;\n}\n\nexport function revealAll(state: Board) {\n  state.cells.forEach(row => {\n    row.forEach(cell => {\n      cell.is_revealed = true;\n    });\n  });\n}\n\nexport function revealCell(cell: Cell, state: Board) {\n  if (cell.is_revealed || cell.is_flagged) return;\n\n  cell.is_revealed = true;\n  if (cell.is_bomb) revealAll(state);\n  if (!cell.value)\n    getNeighbors(cell, state.cells).map(cell => revealCell(cell, state));\n}\n\nexport function countFlags(cell: Cell, cells: Cell[][]) {\n  return getNeighbors(cell, cells).reduce(\n    (p, c) => (c.is_flagged ? p + 1 : p),\n    0\n  );\n}\n\nexport function computeGameStatus(board: Board) {\n  for (const row of board.cells) {\n    for (const cell of row) {\n      if (cell.is_revealed && cell.is_bomb) return (board.status = 'lost');\n      if (!cell.is_revealed && !cell.is_bomb) return (board.status = 'playing');\n    }\n  }\n\n  board.status = 'won';\n}\n\nexport function generateBoard(\n  rows: number,\n  cols: number,\n  bombs: number,\n  state: Board\n) {\n  state.status = 'playing';\n  state.cells = [];\n  for (let i = 0; i < rows; i++) {\n    state.cells.push([]);\n    state.startTime = new Date();\n    for (let j = 0; j < cols; j++) {\n      state.cells[i].push({\n        is_revealed: false,\n        is_bomb: false,\n        is_flagged: false,\n        value: 0,\n\n        x: i,\n        y: j,\n      });\n    }\n  }\n\n  const options = [];\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      options.push([i, j]);\n    }\n  }\n\n  function pickRandomAndRemove(arr: any[]) {\n    const index = Math.floor(Math.random() * arr.length);\n    const res = arr[index];\n    arr.splice(index, 1);\n    return res;\n  }\n\n  for (let i = 0; i < bombs; i++) {\n    if (!options.length) return;\n\n    const [x, y] = pickRandomAndRemove(options);\n\n    state.cells[x][y].is_bomb = true;\n\n    getNeighbors(state.cells[x][y], state.cells).forEach(cell =>\n      !cell.is_bomb ? (cell.value += 1) : null\n    );\n  }\n}\n","import { stateManager } from '../root';\n\nimport { Board, Cell } from './types';\nimport {\n  getNeighbors,\n  revealCell,\n  countFlags,\n  generateBoard,\n  computeGameStatus,\n} from './utils';\n\ntype State = Board;\nconst moduleName = 'board';\n\nstateManager.createModule(moduleName, { initialState: { cells: [] } });\n\nexport const initBoard = stateManager.createLocalEvent<\n  { cols: number; rows: number; bombs: number },\n  State\n>(moduleName, 'INIT_BOARD', (state, { cols, rows, bombs }) => {\n  state.rows = rows;\n  state.cols = cols;\n  state.bombs = bombs;\n  generateBoard(rows, cols, bombs, state);\n});\n\nexport const resetBoard = stateManager.createLocalEvent<unknown, State>(\n  moduleName,\n  'RESET_BOARD',\n  state => {\n    const { rows, cols, bombs } = state;\n    generateBoard(rows, cols, bombs, state);\n  }\n);\n\nexport const triggerReveal = stateManager.createLocalEvent<Cell, State>(\n  moduleName,\n  'TRIGGER_REVEAL',\n  (state, { x, y }) => {\n    const cell = state.cells[x][y];\n\n    if (!cell.is_revealed) revealCell(cell, state);\n    else if (countFlags(cell, state.cells) === cell.value)\n      getNeighbors(cell, state.cells).forEach(cell => revealCell(cell, state));\n\n    computeGameStatus(state);\n  }\n);\n\nexport const triggerFlag = stateManager.createLocalEvent<Cell, State>(\n  moduleName,\n  'TRIGGER_FLAG',\n  (state, { x, y }) => {\n    const cell = state.cells[x][y];\n\n    if (cell.is_revealed) return;\n\n    cell.is_flagged = !cell.is_flagged;\n  }\n);\n","import { StateManager } from 'services';\n\nimport { Board } from 'state';\n\nexport const stateManager = new StateManager();\n\nexport type StoreState = {\n  board: Board;\n};\n","import { createBrowserHistory } from 'history';\nimport qs from 'qs';\n\nconst history = createBrowserHistory();\n\nhistory.location = {\n  ...history.location,\n  query: qs.parse(history.location.search.substr(1)),\n  state: {},\n};\n\nhistory.listen(() => {\n  history.location = {\n    ...history.location,\n    query: qs.parse(history.location.search.substr(1)),\n    state: history.location.state || {},\n  };\n});\n\nconst { go, goBack, push, replace } = history;\n\nexport { go, goBack, push, replace };\nexport default history;\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button } from 'antd';\n\nimport { triggerReveal, triggerFlag, Cell as CellType } from 'state';\n\ntype props = {\n  cell: CellType;\n  disabled: boolean;\n};\n\nconst Cell: React.FC<props> = ({ cell, disabled }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      type={cell.is_revealed ? 'primary' : undefined}\n      danger={cell.is_revealed && cell.is_bomb}\n      style={{\n        height: 30,\n        width: 30,\n        borderRadius: 0,\n      }}\n      onMouseDown={e => {\n        e.preventDefault();\n        if (disabled) return;\n        if (e.button === 0) dispatch(triggerReveal(cell));\n      }}\n      onContextMenu={e => {\n        e.preventDefault();\n        if (disabled) return;\n        dispatch(triggerFlag(cell));\n      }}\n    >\n      {cell.is_revealed\n        ? cell.is_bomb\n          ? 'B'\n          : cell.value\n          ? cell.value\n          : ' '\n        : cell.is_flagged\n        ? 'F'\n        : ' '}\n    </Button>\n  );\n};\n\nexport default memo(Cell);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Row, Col, message } from 'antd';\n\nimport { boardSelectors, triggerReveal } from 'state';\n\nimport Cell from './Cell';\n\nconst Board: React.FC = () => {\n  const dispatch = useDispatch();\n  const board = useSelector(boardSelectors.board);\n  const gameStatus = useSelector(boardSelectors.gameStatus);\n  const bombsLeft = useSelector(boardSelectors.bombsLeft);\n  const startTime = useSelector(boardSelectors.startTime);\n\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => setElapsedTime(val => val + 1), 1000);\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (gameStatus === 'won') message.info('You won! :)');\n    if (gameStatus === 'lost') message.error('You lost! :(');\n  }, [gameStatus]);\n\n  useEffect(() => {\n    console.log(startTime);\n    setElapsedTime(0);\n  }, [startTime]);\n\n  return (\n    <div>\n      <Row>Bombs left: {bombsLeft}</Row>\n      <Row>Time: {String(elapsedTime).padStart(3, '0')}</Row>\n      <div style={{ border: '2px solid black' }}>\n        {board.cells.map((row, i) => (\n          <Row key={i}>\n            {row.map((cell, j) => (\n              <Col key={j}>\n                <Cell cell={cell} disabled={gameStatus !== 'playing'} />\n              </Col>\n            ))}\n          </Row>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","export const EASY = { rows: 10, cols: 10, bombs: 10 };\nexport const INTERMEDIATE = { rows: 16, cols: 16, bombs: 40 };\nexport const EXPERT = { rows: 16, cols: 30, bombs: 99 };\n\nexport type Difficulties = 'Easy' | 'Intermediate' | 'Expert';\nexport const DIFFICULTIES = {\n  Easy: EASY,\n  Intermediate: INTERMEDIATE,\n  Expert: EXPERT,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button, Row } from 'antd';\n\nimport { DIFFICULTIES, Difficulties, EASY } from './constants';\n\nimport { initBoard } from 'state';\n\nconst DifficultySelector: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const [difficulty, setDifficulty] = useState<Difficulties>('Easy');\n\n  useEffect(() => {\n    dispatch(initBoard(DIFFICULTIES.Easy));\n  }, [dispatch]);\n\n  return (\n    <div>\n      {Object.keys(DIFFICULTIES).map(diff => (\n        <Button\n          key={diff}\n          onClick={() => {\n            setDifficulty(diff as Difficulties);\n            dispatch(initBoard(DIFFICULTIES[diff as Difficulties]));\n          }}\n          type={diff === difficulty ? 'primary' : undefined}\n        >\n          {diff}\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nexport default DifficultySelector;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Row as AntdRow, Button, Layout } from 'antd';\n\nimport Board from './Board';\nimport DifficultySelector from './DifficultySelector';\n\nimport { resetBoard } from 'state';\n\nconst Game: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const Row: React.FC<{ paddingTop: number }> = props => (\n    <AntdRow\n      justify=\"center\"\n      style={{\n        textAlign: 'center',\n        paddingTop: props.paddingTop,\n      }}\n    >\n      {props.children}\n    </AntdRow>\n  );\n\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Row paddingTop={30}>\n        <h1>Minesweeper</h1>\n      </Row>\n      <Row paddingTop={10}>\n        <Button onClick={() => dispatch(resetBoard({}))}>Reset</Button>\n      </Row>\n      <Row paddingTop={0}>\n        <Board />\n      </Row>\n      <Row paddingTop={10}>\n        <DifficultySelector />\n      </Row>\n    </Layout>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Helmet } from 'react-helmet-async';\n\nimport history from './state/history';\n\nimport { Game } from './views';\n\nconst App: React.FC = () => {\n  return (\n    <Router history={history}>\n      <Helmet\n        defer={false}\n        htmlAttributes={{ lang: 'en' }}\n        encodeSpecialCharacters={true}\n        defaultTitle={'Minesweeper'}\n        titleTemplate={`%s | PM`}\n        titleAttributes={{ itemprop: 'name', lang: 'en' }}\n      />\n      <Game />\n    </Router>\n  );\n};\n\nApp.defaultProps = {};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL || '',\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, compose, applyMiddleware, StoreEnhancer } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension/logOnlyInProduction';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { stateManager, StoreState } from './modules/root/';\n\nimport { createSocketMiddleware } from 'services';\n\n/**\n * Create the redux-saga middleware.\n */\nconst sagaMiddleware = createSagaMiddleware();\n\n/**\n * Enhancers for the store.\n */\nconst enhancers = compose(\n  /* Add the redux-saga middleware */\n  applyMiddleware(createSocketMiddleware(stateManager)),\n  applyMiddleware(sagaMiddleware),\n  /* Include the devtools. Comment this out if you don't want to use the dev tools. */\n  devToolsEnhancer({})\n) as StoreEnhancer<StoreState>;\n\n/**\n * Create the store. We do not include an initial state, as each of the module / duck\n * reducers includes its own initial state.\n */\nconst store = createStore(stateManager.reducer, enhancers);\n\n/* Run the root saga */\nsagaMiddleware.run(stateManager.saga);\n\nexport function getStore() {\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport 'antd/dist/antd.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { getStore } from './state/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={getStore()}>\n    <HelmetProvider>\n      <App />\n    </HelmetProvider>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export { default as useInterval } from './useInterval';\nexport * from './State';\n","let BASE_URL = '';\nlet API_URL = '';\nlet SOCKET_URL = '';\n\nif (process.env.NODE_ENV === 'development') {\n  BASE_URL = '';\n}\n\nAPI_URL = `http://${BASE_URL}/api`;\nSOCKET_URL = `ws://${BASE_URL}/api`;\n\nexport { BASE_URL, API_URL, SOCKET_URL };\n","export const PING_INTERVAL = 10000;\nexport const PONG_TIMEOUT = 5000;\nexport const PING = 'PING';\nexport const PONG = 'PONG';\n\n// SOCKET_STATES\nexport const SOCKET_CONNECTING = 'SOCKET_CONNECTING';\nexport const SOCKET_OPENED = 'SOCKET_OPENED';\nexport const SOCKET_CLOSING = 'SOCKET_CLOSING';\nexport const SOCKET_CLOSED = 'SOCKET_CLOSED';\n\nexport const SOCKET_STATES: { [key: string]: string } = {\n  0: SOCKET_CONNECTING,\n  1: SOCKET_OPENED,\n  2: SOCKET_CLOSING,\n  3: SOCKET_CLOSED,\n};\n\n// ACTIONS\nexport const SOCKET_COMMAND = 'SOCKET_COMMAND';\nexport const SOCKET_RECEIVE = 'SOCKET_RECEIVE';\nexport const SOCKET_RECONNECTED = 'SOCKET_RECONNECTED';\nexport const SOCKET_RECONNECT = 'SOCKET_RECONNECT';\n\nexport const SOCKET_CONNECT = 'SOCKET_CONNECT';\nexport const SOCKET_CONNECTED = 'SOCKET_CONNECTED';\nexport const SOCKET_DISCONNECT = 'SOCKET_DISCONNECT';\n","import * as boardSelectors from '../board/selectors';\nexport { boardSelectors };\n\nexport * from '../board/actions';\nexport * from '../board/types';\n","import { StoreState } from '../root';\n\nexport const board = (state: StoreState) => state.board;\nexport const gameStatus = (state: StoreState) => state.board.status;\nexport const startTime = (state: StoreState) => state.board.startTime;\n\nexport const bombsLeft = (state: StoreState) => {\n  const cells = state.board.cells.flat(1);\n\n  const bombs = state.board.bombs;\n  const flags = cells.reduce((p, c) => (c.is_flagged ? p + 1 : p), 0);\n\n  return bombs - flags;\n};\n","import React, { useEffect, useRef } from 'react';\n\ntype IntervalFunction = () => unknown | void;\n\nexport default function useInterval(callback: IntervalFunction, ms: number) {\n  const savedCallback = useRef<IntervalFunction | null>(null);\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current !== null) {\n        savedCallback.current();\n      }\n    }\n\n    const id = setInterval(tick, ms);\n    return () => clearInterval(id);\n  }, [ms]);\n}\n","export * from './ApiCaller';\nexport { default as StateManager } from './StateManager';\nexport * from './createSocketActions';\nexport { default as createSocketMiddleware } from './createSocketMiddleware';\nexport * from './types';\n"],"sourceRoot":""}